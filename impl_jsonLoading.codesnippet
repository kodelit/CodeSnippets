<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>impl_jsonLoading</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>    /// Loads Quiz with the JSON file name in the bundle.
    /// - Parameters:
    ///   - fileName: resource file name without extension.
    ///   - bundle: default is `Bundle.main`.
    /// - Returns: Instance of the model loaded with the JSON resource file in the bundle.
    static func loadWithJSON&lt;T&gt;(fileName: String, bundle: Bundle = .main, decoder: JSONDecoder = GearManagement.jsonDecoder) -&gt; T? where T: Decodable {
        guard let url = bundle.url(forResource: fileName, withExtension: "json") else {
            assertionFailure("No JSON with file name: \(fileName) in bundle: \(bundle.bundleIdentifier ?? "") ")
            return nil
        }
        do {
            let data = try Data(contentsOf: url)
            let model = try decoder.decode(T.self, from: data)
            return model
        } catch {
            print("Failed to load JSON: \(fileName) from bundle: \(bundle.bundleIdentifier ?? ""), error:", error)
        }
        return nil
    }

    @available(macOS 10.11, *)
    static func loadWithJSON&lt;T&gt;(dataAssetName name: String, bundle: Bundle = .main, decoder: JSONDecoder = GearManagement.jsonDecoder) -&gt; T? where T: Decodable {
        guard let asset = NSDataAsset(name: name, bundle: bundle) else {
            assertionFailure("No Asset with name: \(name) in bundle: \(bundle.bundleIdentifier ?? "") ")
            return nil
        }

        do {
            let data = asset.data
            let model = try decoder.decode(T.self, from: data)
            return model
        } catch {
            print("Failed to load from JSON Asset: \(name) in bundle: \(bundle.bundleIdentifier ?? ""), error:", error)
        }
        return nil
    }</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>D9BD7A04-B739-4F74-88A3-1C44608DB4C9</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetSummary</key>
	<string></string>
	<key>IDECodeSnippetTitle</key>
	<string>Impl: Loading with JSON</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
